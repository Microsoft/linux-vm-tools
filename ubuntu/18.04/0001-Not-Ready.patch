From fa2bdba1998a00d353b737363d66e043cebdbb38 Mon Sep 17 00:00:00 2001
From: "Justin Terry (VM)" <juterry@microsoft.com>
Date: Fri, 17 Nov 2017 13:07:59 -0800
Subject: [PATCH] Not Ready

---
 xrdp/xrdp.ini         |  5 +++++
 xrdp/xrdp_login_wnd.c | 35 ++++++++++++++++++++++-------------
 xrdp/xrdp_types.h     |  1 +
 xrdp/xrdp_wm.c        |  6 ++++--
 4 files changed, 32 insertions(+), 15 deletions(-)

diff --git a/xrdp/xrdp.ini b/xrdp/xrdp.ini
index e3ae284..357e143 100644
--- a/xrdp/xrdp.ini
+++ b/xrdp/xrdp.ini
@@ -72,6 +72,11 @@ grey=dedede
 ; configure login screen
 ;
 
+; Should the login screen be displayed or hidden. If true the login screen
+; will not be displayed even if no username/password are provided. This
+; enables the use of the distro's login manager.
+#ls_hide_display=true
+
 ; Login Screen Window Title
 #ls_title=My Login Title
 
diff --git a/xrdp/xrdp_login_wnd.c b/xrdp/xrdp_login_wnd.c
index 262f1bb..476d891 100644
--- a/xrdp/xrdp_login_wnd.c
+++ b/xrdp/xrdp_login_wnd.c
@@ -253,18 +253,18 @@ xrdp_wm_ok_clicked(struct xrdp_bitmap *wnd)
 
 /*****************************************************************************/
 /**
-* This is an internal function in this file used to parse the domain 
-* information sent from the client. If the information starts 
-* with '_' the domain field contains the IP/DNS to connect to. 
-* If the domain field contains an additional '__' the char that 
-* follows this '__' is an index number of a preferred combo choice. 
-* Valid values for this choice is 0-9. But this function will only return 
+* This is an internal function in this file used to parse the domain
+* information sent from the client. If the information starts
+* with '_' the domain field contains the IP/DNS to connect to.
+* If the domain field contains an additional '__' the char that
+* follows this '__' is an index number of a preferred combo choice.
+* Valid values for this choice is 0-9. But this function will only return
 * index numbers between 0 and the max number of combo items -1.
-* Example: _192.168.1.2__1 result in a resultbuffer containing 
-* 192.168.1.2  and the return value will be 1. Meaning that 
-* index 1 is the preferred combo choice. 
-* 
-* Users can create shortcuts where this information is configured. These 
+* Example: _192.168.1.2__1 result in a resultbuffer containing
+* 192.168.1.2  and the return value will be 1. Meaning that
+* index 1 is the preferred combo choice.
+*
+* Users can create shortcuts where this information is configured. These
 * shortcuts simplifies login.
 * @param originalDomainInfo indata to this function
 * @param comboMax the max number of combo choices
@@ -295,7 +295,7 @@ xrdp_wm_parse_domain_information(char *originalDomainInfo, int comboMax,
          * log_message(LOG_LEVEL_DEBUG, "domain contains _");
          * We must use valid chars in the domain name.
          * Underscore is a valid name in the domain.
-         * Invalid chars are ignored in microsoft client therefore we use '_' 
+         * Invalid chars are ignored in microsoft client therefore we use '_'
          * again. this sec '__' contains the split for index.*/
         pos = g_pos(&originalDomainInfo[1], "__");
         if (pos > 0)
@@ -320,7 +320,7 @@ xrdp_wm_parse_domain_information(char *originalDomainInfo, int comboMax,
                 }
             }
             /* pos limit the String to only contain the IP */
-            g_strncpy(resultBuffer, &originalDomainInfo[1], pos); 
+            g_strncpy(resultBuffer, &originalDomainInfo[1], pos);
         }
         else
         {
@@ -852,6 +852,7 @@ load_xrdp_config(struct xrdp_config *config, int bpp)
 
     /* set default values in case we can't get them from xrdp.ini file */
     globals->ini_version = 1;
+    globals->ls_hide_display = 0; // displayed by default.
     globals->ls_top_window_bg_color = HCOLOR(bpp, xrdp_wm_htoi("009cb5"));
     globals->ls_bg_color = HCOLOR(bpp, xrdp_wm_htoi("dedede"));
     globals->ls_width = 350;
@@ -1002,6 +1003,13 @@ load_xrdp_config(struct xrdp_config *config, int bpp)
             globals->allow_multimon = g_text2bool(v);
 
         /* login screen values */
+        else if (g_strncmp(n, "ls_hide_display", 64) == 0)
+        {
+            if (g_text2bool(v))
+            {
+                globals->ls_hide_display = 1;
+            }
+        }
         else if (g_strncmp(n, "ls_top_window_bg_color", 64) == 0)
             globals->ls_top_window_bg_color = HCOLOR(bpp, xrdp_wm_htoi(v));
 
@@ -1110,6 +1118,7 @@ load_xrdp_config(struct xrdp_config *config, int bpp)
     g_writeln("nego_sec_layer:          %d", globals->nego_sec_layer);
     g_writeln("allow_multimon:          %d", globals->allow_multimon);
 
+    g_writeln("ls_hide_display:         %d", globals->ls_hide_display);
     g_writeln("ls_top_window_bg_color:  %x", globals->ls_top_window_bg_color);
     g_writeln("ls_width:                %d", globals->ls_width);
     g_writeln("ls_height:               %d", globals->ls_height);
diff --git a/xrdp/xrdp_types.h b/xrdp/xrdp_types.h
index 75c70ee..525cc9f 100644
--- a/xrdp/xrdp_types.h
+++ b/xrdp/xrdp_types.h
@@ -576,6 +576,7 @@ struct xrdp_cfg_globals
     int  background;
 
     /* login screen */
+    int  ls_hide_display;        /* should the login screen be hidden. */
     int  ls_top_window_bg_color; /* top level window background color */
     int  ls_width;               /* window width */
     int  ls_height;              /* window height */
diff --git a/xrdp/xrdp_wm.c b/xrdp/xrdp_wm.c
index 8b26718..6adb9e1 100644
--- a/xrdp/xrdp_wm.c
+++ b/xrdp/xrdp_wm.c
@@ -567,7 +567,8 @@ xrdp_wm_init(struct xrdp_wm *self)
     xrdp_wm_load_static_pointers(self);
     self->screen->bg_color = self->xrdp_config->cfg_globals.ls_top_window_bg_color;
 
-    if (self->session->client_info->rdp_autologin)
+    if (self->session->client_info->rdp_autologin ||
+        self->xrdp_config->cfg_globals.ls_hide_display)
     {
         /*
          * NOTE: this should eventually be accessed from self->xrdp_config
@@ -1872,7 +1873,8 @@ xrdp_wm_login_mode_changed(struct xrdp_wm *self)
     }
     else if (self->login_mode == 2)
     {
-        if (xrdp_mm_connect(self->mm) == 0)
+        if (self->xrdp_config->cfg_globals.ls_hide_display ||
+            xrdp_mm_connect(self->mm) == 0)
         {
             xrdp_wm_set_login_mode(self, 3); /* put the wm in connected mode */
             xrdp_wm_delete_all_children(self);
-- 
2.7.4

